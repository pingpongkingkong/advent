d = ''' set b 79

set c b c= 0
jnz a 2 
jnz 1 5
mul b 100 b=0
sub b -100000 b=-100,000
set c b c=-100,000
sub c -17000 -83,000
set f 1 f=1
set d 2 d=2
set e 2 e=2 <--
set g d g=2 <--
mul g e g=4
sub g b g=-100,004
jnz g 2 
set f 0
sub e -1 e=3
set g e g=3
sub g b g=-99,997
jnz g -8 ...
sub d -1 d=3
set g d g=3
sub g b g=100,003
jnz g -13 g=0
jnz f 2 f=0
sub h -1 h=1
set g b g=-100,000
sub g c g=-100,000 - -17,000 = -83,000
jnz g 2
jnz 1 3
sub b -17
jnz 1 -23'''

ins = d.split('\n')
ins = map(lambda x: x.rstrip().lstrip(), ins)
regs = {'a':1,'b':0,'c':0,'d':0, 'e':0,'f':0,'g':0,'h':0}
off = 0

def jnz(r, parts):
	if x(parts[1]) != 0:
		return x(parts[2])
	else:
		return 1

def iset(r, parts):
	r[parts[1]] = x(parts[2])
	return 1

def sub(r, parts):
	r[parts[1]] = x(parts[1]) - x(parts[2])
	return 1

def mul(r, parts):
	r[parts[1]] = x(parts[1]) * x(parts[2])
	return 1

def x(v):
	global regs
	if v.replace('-','').isdigit():
		return int(v)
	else:
		return int(regs[v])

fns =  {'mul':mul, 'set':iset, 'sub':sub, 'jnz':jnz}

count = 0

while off < len(ins):

	#print off
	i = ins[off]
	p = i.split()

	#print regs
	#print p

	if p[0] == 'mul':
		count += 1

	off += fns[p[0]](regs, p)

print regs
